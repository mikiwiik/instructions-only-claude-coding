name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [22.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run type checking
      run: npm run type-check

    - name: Run linting
      run: npm run lint

    - name: Run tests with coverage
      run: npm run test:coverage

    - name: Jest Coverage Report
      uses: ArtiomTr/jest-coverage-report-action@v2
      if: github.event_name == 'pull_request' && matrix.os == 'ubuntu-latest' && matrix.node-version == '22.x'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        coverage-file: ./coverage/lcov.info
        base-coverage-file: ./coverage/lcov.info
        threshold: 90
        working-directory: ./

    - name: Build application
      run: npm run build

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '22.x'
      with:
        name: coverage-report
        path: |
          coverage/
          !coverage/.nyc_output
        retention-days: 30

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '22.x'
      with:
        name: build-artifacts
        path: |
          .next/
          !.next/cache/
        retention-days: 7
  build-summary:
      name: Build and Test
      runs-on: ubuntu-latest
      needs: build
      if: always()

      steps:
      - name: Check build matrix success
        run: |
          if [[ "${{ needs.build.result }}" == "success" ]]; then
            echo "All build matrix jobs completed successfully"
            exit 0
          else
            echo "One or more build matrix jobs failed"
            exit 1
          fi
